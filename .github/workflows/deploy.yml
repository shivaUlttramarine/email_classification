name: Deploy Emails-Classification to AWS

on:
  push:
    branches:
      - master  # Trigger deployment on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      # - name: Logging in to Amazon ECR...
      #   run: |
      #     aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 193789491982.dkr.ecr.eu-central-1.amazonaws.com

      # - name: Building the Docker image
      #   run: |
      #     docker build -t email_classification .
      #     docker tag email_classification:latest 193789491982.dkr.ecr.eu-central-1.amazonaws.com/email:latest


      # - name: Pushing the Image
      #   run: |
      #     docker push 193789491982.dkr.ecr.eu-central-1.amazonaws.com/email:latest

         
      # - name: Deploy Image to Amazon ECS
      #   run: |
      #     aws ecs update-service --cluster email --service email_service --force-new-deployment

      - name: Deploy Image to EC2
        env:
          EC2_USER: "ec2-user"
          EC2_HOST: ${{ secrets.EC2_PUBLIC_IP }}     # EC2 instance public IP, stored in GitHub Secrets
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}        # SSH private key, stored in GitHub Secrets
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1" 
        run: |
          echo "$EC2_KEY" > ./ec2_key.pem
          chmod 600 ./ec2_key.pem
          echo "ssh t0 EC2.."
          ssh -o StrictHostKeyChecking=no -i "./ec2_key.pem" $EC2_USER@$EC2_HOST << EOF

          echo "Exporting  Environment Vaeriables"
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=eu-central-1          

          echo "Loging in to  ECR..."
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 193789491982.dkr.ecr.eu-central-1.amazonaws.com
          echo "pulling Docker...."
          docker pull 193789491982.dkr.ecr.eu-central-1.amazonaws.com/email:latest
          echo "Removing old docker images.."
          docker rm -f email_classification || true
          echo "Runing docker.."
          docker run -d -p 80:80 --name email_classification 193789491982.dkr.ecr.eu-central-1.amazonaws.com/email:latest
          echo "Runing docker was succcesful..."
          EOF